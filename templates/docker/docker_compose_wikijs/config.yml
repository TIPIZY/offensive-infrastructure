#######################################################################
# Wiki.js - CONFIGURATION                                             #
#######################################################################
# Full documentation + examples:
# https://docs-beta.requarks.io/install

# ---------------------------------------------------------------------
# IP address the server should listen to
# ---------------------------------------------------------------------
bindIP: 0.0.0.0

# ---------------------------------------------------------------------
# Port the main server should listen to (80 by default)
# ---------------------------------------------------------------------
port: 3000

# # ---------------------------------------------------------------------
# # Database
# # ---------------------------------------------------------------------
# # Supported Database Engines:
# # - postgres = PostgreSQL 9.5 or later
# # - mysql = MySQL 8.0 or later (5.7.8 partially supported, refer to docs)
# # - mariadb = MariaDB 10.2.7 or later
# # - mssql = MS SQL Server 2012 or later
# # - sqlite = SQLite 3.9 or later

db:
  # type: postgres
  # PostgreSQL / MySQL / MariaDB / MS SQL Server only:
  # host: wikidb
  # port: 5432
  # user: wikijs
  # pass: wikijsrocks
  # db: wiki
  # ssl: false
  # SQLite only:
  type: sqlite
  storage: /etc/wiki/db/database.sqlite

# ---------------------------------------------------------------------
# Log Level
# ---------------------------------------------------------------------
# Possible values: error, warn, info (default), verbose, debug, silly
logLevel: info


#######################################################################
# ADVANCED OPTIONS                                                    #
#######################################################################

# ---------------------------------------------------------------------
# Use X-Forwarded-For header
# ---------------------------------------------------------------------
# Enable only if Wiki.js is behind a reverse-proxy (nginx, apache, etc)
# or a cloud proxying services like Cloudflare.
trustProxy: false

# ---------------------------------------------------------------------
# SSL/TLS Settings
# ---------------------------------------------------------------------
# Consider using a reverse proxy (e.g. nginx) if you require more
# advanced options than those provided below.

# ssl:
#   enabled: false
#   # Certificate format, either 'pem' or 'pfx':
#   format: pem
#   # Using PEM format:
#   key: path/to/key.pem
#   cert: path/to/cert.pem
#   # Using PFX format:
#   pfx: path/to/cert.pfx
#   # Passphrase when using encrypted PEM / PFX keys (default: null):
#   passphrase: null
#   # Diffie Hellman parameters, with key length being greater or equal
#   # to 1024 bits (default: null):
#   dhparam: null
#   # Listen on this HTTP port and redirect all requests to HTTPS.
#   # Set to false to disable (default: 80):
#   redirectNonSSLPort: 80

# ---------------------------------------------------------------------
# Database Pool Options
# ---------------------------------------------------------------------
pool:
  # min: 2
  # max: 10

# ---------------------------------------------------------------------
# Upload Limits
# ---------------------------------------------------------------------
# If you're using a reverse-proxy in front of Wiki.js, you must also
# change your proxy upload limits!

uploads:
  # Maximum upload size in bytes per file (default: 5242880 (5 MB))
  maxFileSize: 5242880
  # Maximum file uploads per request (default: 20)
  maxFiles: 10









# # ---------------------------------------------------------------------
# # Data Directories
# # ---------------------------------------------------------------------
# paths:
#   repo: ./repo
#   data: ./data

# # ---------------------------------------------------------------------
# # Git Connection Info
# # ---------------------------------------------------------------------
# git:
#   url: git@github.com:repo
#   branch: master
#   auth:
#     # Type: basic or ssh
#     type: ssh
#     # Only for SSH authentication:
#     privateKey: /etc/wiki/keys/test
#     #sslVerify: true
#     # Default email to use as commit author
#     serverEmail: email@example.com
#     # Whether to use user email as author in commits
#     showUserEmail: false
#   signature:
#     name: name
#     email: email@example.com

# # ---------------------------------------------------------------------
# # Site Authentication
# # ---------------------------------------------------------------------
# public: false
# auth:
#   defaultReadAccess: false
#   local:
#     enabled: true
#   # google:
#   #   enabled: true
#   #   clientId: GOOGLE_CLIENT_ID
#   #   clientSecret: GOOGLE_CLIENT_SECRET
#   # microsoft:
#   #   enabled: true
#   #   clientId: MS_APP_ID
#   #   clientSecret: MS_APP_SECRET
#   # facebook:
#   #   enabled: false
#   #   clientId: FACEBOOK_APP_ID
#   #   clientSecret: FACEBOOK_APP_SECRET
#   # github:
#   #   enabled: true
#   #   # clientId: GITHUB_CLIENT_ID
#   #   # clientSecret: GITHUB_CLIENT_SECRET
#   # slack:
#   #   enabled: false
#   #   clientId: 'SLACK_CLIENT_ID'
#   #   clientSecret: 'SLACK_CLIENT_SECRET'
#   # ldap:
#   #   enabled: false
#   #   url: ldap://serverhost:389
#   #   bindDn: cn='root'
#   #   bindCredentials: BIND_PASSWORD
#   #   searchBase: o=users,o=example.com
#   #   searchFilter: (uid={{username}})
#   #   tlsEnabled: false
#   #   tlsCertPath: C:\example\root_ca_cert.crt
#   # azure:
#   #   enabled: false
#   #   clientId: APP_ID
#   #   clientSecret: APP_SECRET_KEY
#   #   resource: '00000002-0000-0000-c000-000000000000'
#   #   tenant: 'YOUR_TENANT.onmicrosoft.com'
#   # oauth2:
#   #   enabled: false
#   #   clientId: OAUTH2_CLIENT_ID
#   #   clientSecret: OAUTH2_CLIENT_SECRET
#   #   authorizationURL: OAUTH2_AUTH_URL
#   #   tokenURL: OAUTH2_TOKEN_URL
#   # oidc:
#   #   enabled: false
#   #   clientId: OPENID_CONNECT_CLIENT_ID
#   #   clientSecret: OPENID_CONNECT_CLIENT_SECRET
#   #   issuer: OPENID_CONNECT_ISSUER
#   #   userInfoUrl: OPENID_CONNECT_USER_INFO_URL
#   #   authorizationURL: OPENID_CONNECT_AUTHORIZATION_URL
#   #   tokenURL: OPENID_CONNECT_TOKEN_URL
#   #   emailClaim: OPENID_CONNECT_EMAIL_CLAIM_PATH
#   #   usernameClaim: OPENID_CONNECT_USERNAME_CLAIM_PATH
